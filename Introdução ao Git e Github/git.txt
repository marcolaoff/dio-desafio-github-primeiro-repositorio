Comandos básicos para o git

download git ---> https://git-scm.com

ls -a (mostra arquivos ocultos)
cd .. (volta 1 nivel)
crtl + l (limpa o terminal)
Git init (inicia)
Git add (modifica)(move)(adiciona)
Git commit(finaliza as modificações)
Git commit -m "descrição do commit"
git commit -m "descrição do commit" 
quando fomos fazer um commit temos que ter um autor atrelado a ele:
-> comandos: git config --global user.email "email a ser utlizado"
-> git config --global user.name (nome a ser utilizado) de preferencia o que estiver no github

Git status(vai ajudar a monitorar os status dos arquivos, vai nos dizer se aquele arquivo está untracked, modified, staged, ele é
um comando utilizado com muita frequência.)
mv (terminal)(mover arquivos) ./ para escolher a pasta
echo > (cria arquivos)
git add *(pega tudo que foi modificado e adiciona para o staged)
cat - para visualizar o conteúdo de uma das chaves SSH - toda máquina nova criar a ssh 
pwd - vai nos mostrar o caminho completo 
iniciar o ssh agente - comando:eval $(ssh-agent -s)
depois entregar a chave pro agent - código: ssh-add (chave-ssh privada)

git config --list (vai trazer todas as configurações que estão especificamente no seu git)
git config --global --unset (propriedade da alteração ex: user.email) (para alterações dentro das configurações)

Sequência -> Git init (Git Bash here) -> depois das modificações -> Git add * (para adicionar todas as modificações) -> 
git commit -m "com a mensagem do commit" -> git push origin main -> depois disso todos os commits vão para o github 


git remote add origin URL (adicionar a origem)
git remote -v (vai listar as listas de repositorios remotos que estão cadastrados)
git push origin master (vai empurar o código para o repositorio do github)
git pull origin master (vai puxar o conteúdo do github para o respositorio local)
depois do pull e de resolver os problemas podemos dar commit novamente e depois o push para o github
git clone URL (para clonar todo um codigo do github)


cd repositorio